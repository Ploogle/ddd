#ifndef __LURE_TEST_MESH__
#define __LURE_TEST_MESH__

#include "../../engine/symbols.h"

struct Mesh lure_test_mesh = {
	.name="lure_test_mesh",
	.numVertices = 23,
	.numIndices = 126,
	.vertices = (struct Vector3[]) {
		{.x = 0.000000, .y = 0.176281, .z = 1.000000 },
		{.x = -0.000000, .y = 0.914358, .z = -0.160693 },
		{.x = 0.240514, .y = -0.573581, .z = -0.160693 },
		{.x = -0.240514, .y = -0.573581, .z = -0.160693 },
		{.x = -0.000000, .y = 0.914358, .z = -1.388539 },
		{.x = 0.323788, .y = -0.376255, .z = -1.388539 },
		{.x = -0.323788, .y = -0.376255, .z = -1.388539 },
		{.x = 0.136675, .y = 0.409178, .z = -2.193571 },
		{.x = 0.208716, .y = -0.020136, .z = -2.076197 },
		{.x = 0.010467, .y = -0.005805, .z = -2.070536 },
		{.x = 0.075643, .y = 0.057798, .z = -3.441339 },
		{.x = 0.147683, .y = -0.371516, .z = -3.323965 },
		{.x = -0.050565, .y = -0.357185, .z = -3.318304 },
		{.x = -0.043022, .y = -1.276505, .z = -4.219085 },
		{.x = 0.077770, .y = -1.149101, .z = -3.803809 },
		{.x = -0.120478, .y = -1.134770, .z = -3.798148 },
		{.x = 0.035732, .y = -1.816313, .z = -3.586884 },
		{.x = -0.162516, .y = -1.801982, .z = -3.581223 },
		{.x = -0.085059, .y = -1.943718, .z = -4.002160 },
		{.x = 0.040765, .y = -2.141539, .z = -2.587338 },
		{.x = -0.157483, .y = -2.127207, .z = -2.581676 },
		{.x = -0.084563, .y = -2.551224, .z = -2.446885 },
		{.x = -0.029766, .y = -2.081638, .z = -1.716712 }
	},
	.min_bounds = {-0.323788,-2.551224,-4.219085},
	.max_bounds = {0.323788,0.914358,1.0},
	.indices = (uint16_t[]) {
		0,1,3,
		3,5,2,
		2,0,3,
		2,1,0,
		4,9,6,
		1,5,4,
		1,6,3,
		9,11,8,
		5,7,4,
		5,9,8,
		12,14,11,
		9,10,12,
		7,11,10,
		12,13,15,
		10,14,13,
		16,21,18,
		15,18,17,
		13,16,18,
		15,16,14,
		16,20,19,
		17,21,20,
		20,21,22,
		21,19,22,
		19,20,22,
		3,6,5,
		4,7,9,
		1,2,5,
		1,4,6,
		9,12,11,
		5,8,7,
		5,6,9,
		12,15,14,
		9,7,10,
		7,8,11,
		12,10,13,
		10,11,14,
		16,19,21,
		15,13,18,
		13,14,16,
		15,17,16,
		16,17,20,
		17,18,21
	},
	.triangle_colors = (float[]) {
		1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
	},
};

#endif
